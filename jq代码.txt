mouseout	移出事件
mouseleave 移出事件。这个比较好
mouseover	移入事件
mouseenter 移入事件 这个比较好
mousedown事件：按下鼠标时触发
mouseup事件：松开鼠标时触发
click		点击事件

//获取回车键
$(document).keydown(function (event) {
    if (event.keyCode == 13) {
        $(".denglu").click();
    }
}); 


$().css('css名称','css值');   修稿css
$("id值").fadeIn(时间);  //淡入时间
setInterval  循环 window.setInterval("函数值", 时间);
clearInterval(变量值);  //停止循环
$(".text").val() 向value写入值
toggle() //慢动画显示与隐藏
hide();  //隐藏
show()显示效果
slideDown()向下显示，slow()是水平与垂直方向同时展开，而slideDown是仅仅在垂直方向向下展开
slideUp()向上隐藏,　　hide()是水平与垂直两个方向的，而slideUp()仅仅是垂直方向向上收起隐藏
slideToggle垂直方向上切换,toggle是水平与垂直两个方向上的，而slideToggle是仅仅垂直方向的。
slideToggle垂直方向上切换,toggle是水平与垂直两个方向上的，而slideToggle是仅仅垂直方向的。
fadeOut() 以改变透明度来隐藏
fadeIn() 以改变透明度来显示
fadeToggle() 以改变透明度来切换显示隐藏状态
fadeTo() 由指定的时间将透明度改变到指定的透明度
stop() 停止正在执行动画
delay() 延迟执行动画　　当一个动画stop()了之后还能够用delay()来延迟执行。从停止位置继续执行。当然用原来的方法继续执行也不可，不过没有延时效果。
animate() //自定义动画 语法：animate(params,speed,easing,callback);　　样式参数，时间，可选择，函数  $("#div1").animate({ width:300px,height,300px },3000);
removeAttr("href"); //隐藏a标签中的html
first() 获取匹配的第一个元素
innerHTML //打印对应的字符《如中文等
next() //获取到下级栏目的节点 如： h2 下面的ul
prev() //获取到上级级栏目的节点 如： h2 上面的ul ：获得匹配元素集合中每个元素紧邻的前一个同胞元素，通过选择器进行筛选是可选的。
nextAll() //获取同级部分
parent（）//父级元素
增加一个class： $(".default").addClass("hover_s");
移除一个class：$(".default").removeClass("default ");
check.preventDefault();//此处阻止提交表单    
off() // 移除事件
find()  //查找当前的子级
#().after() //在div下面增加新的html代码
#().append() //在div里面增加新的html代码
$().removeAttr('属性') // 删除标签属性
$().prop('属性')  //动态添加属性
$("#id“).empty() 删除内容
$("#id"）.remove() 删除html标签等
eval(json格式信息)  转移json格式信息
在js中字符截取函数有常用的三个slice()、substring()、substr()了，下面我来给大家介绍slice()、substring()、substr()函数在字符截取时的一些用法与区别吧。
str = str.substr(0, str.length - 1);  //删除最后一个字符
localStorage.缓存名称 = 值 ；  设置缓存
Math.random()   //生成随机数
loaded, ready响应函数（延迟加载函数），console.log($('#aaa').contents().find('#bb').length)等iframe加载完在改变
var data = new FormData('标签');    获取设置标签后所有标签值
data.append('kj', '123');  设置额外的值
$('名称')[0] //这样是直接设置成原生js来获取的，去掉了Jq的dome元素
$("名称")[0].scrollHeight;  //原生获取当前（可是DIV）窗口高度
scrollTop(值，是要数字); //设置窗口滚动条位置
 event.stopPropagation(); //点击任何地方出发时，为了防止自己也被出发就执行
window.parent.location； 获取iframe父级地址
window.parent.frames.location.href="地址" //跳出iframe，这个可以用在多个iframe下使用
top.location.href="地址" //直接跳出iframe，直接跳转当前信息页
window.open('你所要跳转的页面');  //跳转页面到新窗口
绝对
var X = $('#ID').offset().top; 
var Y = $('#ID').offset().left; 

相对
var X = $('#ID').position().top; 
var Y = $('#ID').position().left;

//获取滚动动态位置，设置div到达某个位置的时候就改变
$Choice = $(".Choice").offset().top;  //获取div距离顶部位置
$(window).scroll(function(){
        if($(window).scrollTop()>=$Choice){
            $(".Choice").addClass('ula');
        }else{
            $(".Choice").removeClass('ula');
        }
        // console.info($(this).scrollTop());
    });


//获取域名
host = window.location.host;
host2=document.domain; 
//获取页面完整地址
url = window.location.href;



//判断是否为字符类型
isNaN（） 判断是否为数字


//当前页或者跳转后页面的导航栏添加选中后样式的实例
<script type="text/javascript" src="templets/js/jquery.js"></script>  
<script type="text/javascript"> 
$(document).ready(function(){  
//这个是禁止跳转的 
    $(".nav a").each(function(){  
        $(this).click(function(){  
            $(".nav .hover").removeClass("hover");  
            $(this).addClass("hover");    
            return false;//防止页面跳转  
        });  
    });
//这个是跳转之后选择样式的
$(".title_two ul a").each(function(){  
      $this = $(this);  
      if($this[0].href==String(window.location)){  
          $this.addClass("hover"); 
          $($this).removeAttr("href");
      }

  });  
});  
</script>  
   
<div class="nav">  
<ul>  
    <li><a href="1.html" class="hover"> 首页</a></li>  
    <li><a href="2.html"> 个人资料</a></li>  
    <li><a href="3.html"> 我的好友</a></li>  
    <li><a href="4.html"> 消息管理</a></li>   
</ul>     
</div>

//页面跳转
window.location.href='指定路径'		跳转指定路径

定时器：
setTimeout（方法，时间）；执行一次
setInterval（方法，时间）；每个一个时间断就执行一次，
clearInterval（定时器名称）；//清除定时器
clearTimeout(定时器名称)   //取消setTimeout定时器
//指定某字符到某个字符停止
 htd = "http://www.gzxl.com/index-index.html#" ;
 jieguo_b = htd.substring(htd.indexOf("/")+1,htd.indexOf("-"));

indexOf('值') //获取当前值在哪一个位置，如没有就出现-1
index('这里可以加入值，添加之后可以精准获取位置') //获取标签的当前位置 
window.ActiveXObject || "ActiveXObject" in window  //判断游览器是否为IE

对象.substr(值，值); //
对象.split("-");  //把字符串切割成数组
attr('标签属性'，'属性值');  //修改标签的属性值

alert($(window).height()); //浏览器当前窗口可视区域高度   
alert($(document).height()); //浏览器当前窗口文档的高度   
alert($(document.body).height());//浏览器当前窗口文档body的高度   
alert($(document.body).outerHeight(true));//浏览器当前窗口文档body的总高度 包括border padding margin   
alert($(window).width()); //浏览器当前窗口可视区域宽度   
alert($(document).width());//浏览器当前窗口文档对象宽度   
alert($(document.body).width());//浏览器当前窗口文档body的高度   
alert($(document.body).outerWidth(true));//浏览器当前窗口文档body的总宽度 包括border padding margin   

ajax无刷新页面
function showpage(url){
var xhr = new XMLHttpRequest();
xhr.onreadystatechange = function(){
    if(xhr.readyState==4){
      // alert(xhr.responseText);
        document.getElementById('ser_g_f').innerHTML = xhr.responseText;
    }
}
xhr.open('get',url);
xhr.send(null);
}


//点击图片刷新验证码
<img id="valiCode" onclick="this.src='{:U('admin/logo/pass')}'" src="{:U('admin/logo/pass')}" alt="" srcset="">
//点击文字刷新验证码
<a href="#" onclick="document.getElementById('valiCode').src='{:U('admin/logo/pass')}'">看不清?点击刷新</a>


//返回是否删除
var msg = "您真的确定要删除吗？\n\n请确认！";
if (confirm(msg) == true) {
    // return true;
    location.href = $ax;
} else {
    // location.replace(location.href);
    return false;
}


//判断当前是否为IE
$.support.leadingWhitespace
1.9版本之后

 //随机字符和数字
function aa(len) {
    len = len || 2;
    var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678'; // 默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1  
    var maxPos = $chars.length;
    var pwd = '';
    for (i = 0; i < len; i++) {
        pwd += $chars.charAt(Math.floor(Math.random() * maxPos));
    }
    return pwd;
}  


//游览器不保留缓存
response.setHeader("Cache-Control","no-cache"); 
response.setHeader("Pragma","no-cache"); 
response.setDateHeader("Expires",0); 


手机和pc判断
function getClientInfo(){  
   var userAgentInfo = navigator.userAgent;  
   var Agents = new Array("Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod");  
   var agentinfo = null;  
   for (var i = 0; i < Agents.length; i++) {  
       if (userAgentInfo.indexOf(Agents[i]) > 0) { agentinfo = userAgentInfo; break; }  
   }  
   if(agentinfo){
        return agentinfo;
   }else{
        return "PC"; 
   }     
}
//调用示例
alert( getClientInfo() );


上传图片预览
代码如下利用html5实现:几乎兼容所有主流浏览器，当然IE必须是IE 6以上
【jquery代码】
$(function() {
$("#file_upload").change(function() {
var $file = $(this);
var fileObj = $file[0];
var windowURL = window.URL || window.webkitURL;
var dataURL;
var $img = $("#preview");
 
if(fileObj && fileObj.files && fileObj.files[0]){
dataURL = windowURL.createObjectURL(fileObj.files[0]);
$img.attr('src',dataURL);
}else{
dataURL = $file.val();
var imgObj = document.getElementById("preview");
// 两个坑:
// 1、在设置filter属性时，元素必须已经存在在DOM树中，动态创建的Node，也需要在设置属性前加入到DOM中，先设置属性在加入，无效；
// 2、src属性需要像下面的方式添加，上面的两种方式添加，无效；
imgObj.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=scale)";
imgObj.filters.item("DXImageTransform.Microsoft.AlphaImageLoader").src = dataURL;
 
}
});
});
【html代码】：
<input id="file_upload" type="file" />
<div class="image_container">
<img id="preview" width="60" height="60">
</div>


ajax获取所有的input值
$('.Info').serialize();
中文编码乱码解决：var params = jQuery("form").serialize().replace(/\+/g," "); // http request parameters.    
                 params = decodeURIComponent(params, true); 
                 
                 
// 获取get
function getQueryString(name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
    var reg_rewrite = new RegExp("(^|/)" + name + "/([^/]*)(/|$)", "i");
    var r = window.location.search.substr(1).match(reg);
    var q = window.location.pathname.substr(1).match(reg_rewrite);
    if (r != null) {
        return unescape(r[2]);
    } else if (q != null) {
        return unescape(q[2]);
    } else {
        return null;
    }
}


//当浏览器大小变化时
$(window).resize(function () {          //当浏览器大小变化时
    alert($(window).height());          //浏览器时下窗口可视区域高度
    alert($(document).height());        //浏览器时下窗口文档的高度
    alert($(document.body).height());   //浏览器时下窗口文档body的高度
    alert($(document.body).outerHeight(true)); //浏览器时下窗口文档body的总高度 包括border padding margin
});
